1、方便存储存贮版本
2、方便版本进行对比
3、协同合作

git 安装
网址 https://git-scm.com

配置git（此处为全局配置）
git config --global user.name 'poopun'
git config --global user.email '1461338434@qq.com'
git config --global --list

配置local信息
git config --local	local只对仓库有效
git config --global	global对登录用户所有仓库有效
git config --system	system对系统的所有用户有效
优先级local —>global—>system

已经有文件的时候
cd 到文件夹
git init

没有文件的时候

git init projectsname  项目名称

提交版本
git add . 表示把这个文件夹下面的所有文件夹都加入缓存区
git add file	把要提交的文件添加到暂存区
git commit -m '版本信息'	提交
git log		查看历史版本

版本状态查看
git status
git status -s
git status --short
红色的是表示已经修改还没添加到暂存区间


红色的?表示你有一个新的文件没有添加到暂存区间
 
git log --pretty=oneline	只显示一行
git log -p	显示版本直接的差别
git log -5	显示最近五个版本
git log -5 -p	
git log --stat	查看大体的统计信息

.getignore
# 注释
glob 模式匹配
*匹配0或任意字符
[0-9]
/ 几位指定目录
！取反
？ 匹配任意一个字符
[abc]


git diff 版本对比
git diff --staged 暂存区里面
fit diff 新版本号 HEAD
fit diff 老版本号 新版本号	老版本和新版本之间的区别

fit diff 新版本号 老版本号	新版本和老版本之间的区别


git rm 删除文件
git restore -- file 
git rm file 删除文件
git rm --cached file
git rm *.pyc
如果你的文件修改了还没有加入到暂存区间
使用 git restore filename 取消此文件的修改
使用git restore . 取消所有已修改但没有添加到暂存区间的文件的修改

当把已经修改的文件添加到暂存区间之后
用git restore --staged 文件名  取消添加到暂存区间
git rm --cached file 在版本控制系统里面删除不删除源文件 git rm 直接删除源文件

文件补录：
git commit --amend

标签：v1.1 v1.2就是标签
git tag -a tagname -m '提交信息' 其中tagnamen是你要打的标签的名字

git tag 显示所有的标签
git tag -l v* 查看v开头的标签
git tag -a tagname(标签名) version（版本号） 补录标签
git tag -d 标签名 删除标签

检出：
git check 版本号	退回到之前的版本（不是标签号）
git reflog 展示所有版本
git checkout 标签名 根据标签名检出

别名：
git config --global alias.st 'status'  把git status 指向git st
git config --global alias.last 'log -1 HEAD' 查看最近的一次提交（git log -1 HEAD）用git last 代替
git config --global alias.logol 'log --pretty=oneline'


github的使用：
注册账号：
创建项目：
我的github远程地址：https://github.com/poopun/study_git.git

git 远程地址
git remote 查看是否配置远程地址
git remote -v  查看是否配置远程地址
git remote add 
git remote add study https://github.com/poopun/study_git.git   study为远程地址名称

git 远程操作
git remote show study (study远程名称)
git push study master 本地推送到远程
git fetch study  拉取(study远程名称)有分支用得比较多，需手动进行分支的合并	执行了这条命令本地还没有合并是因为还没进行合并
git pull study 拉取(study远程名称)自动进行分支的合并
git pull study master master 是把远程的master与本地的进行合并，执行这条就有文件下来了 

git 远程修改
git remote rename old_name new_name  重命名
git remote rm name  删除

